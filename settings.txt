You will need to fill out this file for hand in. 

The bellow is just an example, feel free to disregard this documents contents.


Your final settings.txt will look something like this when you are finished:

/////////////////////////////////

Wallpaper 1:

//your parameter variables go here!
let rect_width  = 20;
let rect_height = 20;
let paramter1 = 10;
let paramter2 = true;
let paramter3 = 50; 
let paramter4 = 0; 
let paramter5 = 60;

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  pWallpaper.resolution(NINE_LANDSCAPE);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 100;
  pWallpaper.grid_settings.cell_height = 100;
  pWallpaper.grid_settings.row_offset  = 50;
}

/////////////////////////////////

Wallpaper 2:

//your parameter variables go here!
let rect_width  = 10;
let rect_height = 10;
let paramter1 = 20;
let paramter2 = false;
let paramter3 = 50; 
let paramter4 = 80; 
let paramter5 = 30;

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  pWallpaper.resolution(NINE_LANDSCAPE);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 100;
  pWallpaper.grid_settings.cell_height = 100;
  pWallpaper.grid_settings.row_offset  = 0;
}

//wallpaper1
  //column1
  for (let a = 0; a <= 7; a++){
  push();
  translate (0, 25*a);
  strokeWeight (sW1);
  stroke (sC1);
  fill (fil1);
  rotate (rOt1)
  pasiLeafl();
  pop();}

  //column2
  for (let a = 0; a <= 7; a++){
  push();
  translate (25, 25*a);
  strokeWeight (sW1);
  stroke (sC2);
  fill (fil2);
  rotate (rOt2)
  pasiLeafr();
  pop();
  }

  //column3
  for (let a = 0; a <= 7; a++){
  push();
  translate (40, 25*a);
  strokeWeight (sW1);
  stroke (sC3);
  fill (fil3);
  rotate (rOt3)
  pasiLeafl();
  pop();
  }

  //column4
  for (let a = 0; a <= 7; a++){
  push();
  translate (65, 25*a);
  strokeWeight (sW1);
  stroke (sC2);
  fill (fil2);
  rotate (rOt2)
  pasiLeafr();
  pop();
  }

   //column5
  for (let a = 0; a <= 7; a++){
  push();
  translate (80, 25*a);
  strokeWeight (sW1);
  stroke (sC3);
  fill (fil3);
  rotate (rOt3)
  pasiLeafl();
  pop();
  }

  //column6
  for (let a = 0; a <= 7; a++){
  push();
  translate (105, 25*a);
  strokeWeight (sW1);
  stroke (sC2);
  fill (fil2);
  rotate (rOt2)
  pasiLeafr();
  pop();
  }

   //column7
  for (let a = 0; a <= 7; a++){
  push();
  translate (120, 25*a);
  strokeWeight (sW1);
  stroke (sC3);
  fill (fil3);
  rotate (rOt3)
  pasiLeafl();
  pop();
  }

  //column8
  for (let a = 0; a <= 7; a++){
  push();
  translate (145, 25*a);
  strokeWeight (sW1);
  stroke (sC3);
  fill (fil2);
  rotate (rOt2)
  pasiLeafr();
  pop();
  }

  //column9
  for (let a = 0; a <= 7; a++){
  push();
  translate (160, 25*a);
  strokeWeight (sW1);
  stroke (sC3);
  fill (fil3);
  rotate (rOt3)
  pasiLeafl();
  pop();
  }

  //column10
  for (let a = 0; a <= 7; a++){
  push();
  translate (185, 25*a);
  strokeWeight (sW1);
  stroke (sC3);
  fill (fil2);
  rotate (rOt2)
  pasiLeafr();
  pop();
  }

  //wallpaper2
    for (let a = 0; a <= 7; a++){
  push();
  translate (25*a, 0);
  strokeWeight (sW1);
  stroke (sC1);
  fill (fil1);
  rotate (rOt1)
  pasiLeafl();
  pop();}

  for (let a = 0; a <= 7; a++){
  push();
  translate (25*a, 25);
  strokeWeight (sW1);
  stroke (sC1);
  fill (fil1);
  rotate (rOt2)
  pasiLeafr();
  pop();}

  for (let a = 0; a <= 7; a++){
  push();
  translate (25*a, 50);
  strokeWeight (sW1);
  stroke (sC1);
  fill (fil1);
  rotate (rOt2)
  pasiLeafl();
  pop();}

  for (let a = 0; a <= 7; a++){
  push();
  translate (25*a, 75);
  strokeWeight (sW1);
  stroke (sC1);
  fill (fil1);
  rotate (rOt2)
  pasiLeafr();
  pop();}

   for (let a = 0; a <= 7; a++){
  push();
  translate (25*a, 100);
  strokeWeight (sW1);
  stroke (sC1);
  fill (fil1);
  rotate (rOt2)
  pasiLeafl();
  pop();}

  for (let a = 0; a <= 7; a++){
  push();
  translate (25*a, 125);
  strokeWeight (sW1);
  stroke (sC1);
  fill (fil1);
  rotate (rOt2)
  pasiLeafr();
  pop();}

    for (let a = 0; a <= 7; a++){
  push();
  translate (25*a, 150);
  strokeWeight (sW1);
  stroke (sC1);
  fill (fil1);
  rotate (rOt2)
  pasiLeafl();
  pop();}

   for (let a = 0; a <= 7; a++){
  push();
  translate (25*a, 175);
  strokeWeight (sW1);
  stroke (sC1);
  fill (fil1);
  rotate (rOt2)
  pasiLeafr();
  pop();}

wallpaper tilt, fix this up later
  //your parameter variables go here!
// color variables need to be noted here (which line)
// color variables placed in my symbol not here.

var lineWidth = 1;
var lineColour = 155; // black, grey and white work, we only need one value
//x and y values for translate jitsu

//rotation nonsense i do not fully understand but we cool with it.
var rOt1 = 5;
var rOt2 = 10;

//yes we've set a variables for colours, all i could think of
var R = 7; // maybe we can change colour here? p5 only recognises one number hence why colours need to be called in mySymbol, don't know why 
var G = 247; // so if i tutu here then i can change colours?
var B = 11; // have to figure out how to change each pasiLeaf L or R seperately? that would be annoying no? if i just added var letter and a number? x 3 x however many colors i wana do
var S = 250;//TURNS OUT WE CAN
var Q = 147;
